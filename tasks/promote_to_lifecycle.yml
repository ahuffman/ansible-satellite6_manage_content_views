---
- name: "Set promotion_diff"
  set_fact:
    promotion_diff: "{{ lifecycle_ids | difference(content_view_environment_ids) }}"

# For pretty task names
- name: "Set promotion_names"
  set_fact:
    promotion_names: "{{ lifecycle_dicts | json_query(jq) | union(promotion_names | default([])) }}"
  with_items: "{{ promotion_diff }}"
  vars:
    jq: "[?id==`{{ item }}`].name"

- debug:
    var: "promotion_names"
    verbosity: "1"

- name: "Initiate promotion of {{ cv.name }} to {{ lifecycles }}"
  uri:
    method: "POST"
    status_code: "202"
    body: "{\"id\": \"{{ content_view_version_id }}\",
            \"force\": \"{{ cv.promote_bypass_environment_path | default(False) }}\",
            \"environment_ids\": {{ promotion_diff | to_json }},
            \"description\": \"{{ cv.promote_description | default('') }}\",
            \"force_yum_metadata_regeneration\": \"{{ cv.promote_force_yum_metadata_regeneration | default(False) }}\"
          }"
  vars:
    sat6_url_path: "katello/api/content_view_versions/{{ content_view_version_id }}/promote"
    lifecycles: "{{ promotion_names | join(', ') }}"
  register: "cv_promote"

- name: "Check {{ cv.name }} content view promotion status to {{ lifecycles }}"
  uri:
    body: "{\"id\": \"{{ cv_promote.json.id }}\"}"
  register: "cv_promote_qry"
  vars:
    sat6_url_path: "foreman_tasks/api/tasks/{{ cv_promote.json.id }}"
    lifecycles: "{{ promotion_names | join(', ') }}"
  until:
    - "cv_promote_qry.json.state == 'stopped'"
    - "not cv_promote_qry.json.pending | bool"
    - "cv_promote_qry.json.progress | string == '1.0'"
    - "cv_promote_qry.json.result == 'success'"
  changed_when: "cv_promote_qry.json.result == 'success'"
  failed_when:
    - "cv_promote_qry.json.state == 'paused'"
    - "cv_promote_qry.json.result == 'error'"
  retries: "{{ sat6_max_task_retries }}"
  delay: "{{ sat6_retry_delay }}"

- debug:
    var: "cv_promote_qry.json"
    verbosity: "1"

- name: "Set content_view_published"
  set_fact:
    content_view_published: True
  when:
    - "cv_promote_qry.json.state == 'stopped'"
    - "not cv_promote_qry.json.pending | bool"
    - "cv_promote_qry.json.progress | string == '1.0'"
    - "cv_promote_qry.json.result == 'success'"

- name: "Set content view promotion statistics"
  set_fact:
    content_views_promoted: "{{ content_views_promoted | int + cv_promo_lc | int }}"
    content_views_promoted_names: "{{ content_views_promoted_names | union([cv_promo_txt]) }}"
  vars:
    cv_promo_lc: "{{ promotion_diff | length }}"
    cv_promo_txt: "{{ cv.name }} was promoted to {{ promotion_names | join(', ') }}"
  when: "cv_promote_qry.json.result == 'success'"
