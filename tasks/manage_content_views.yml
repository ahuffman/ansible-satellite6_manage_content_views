---
- name: "Clear facts"
  set_fact:
    content_view_id: ""
    content_view_composite: ""
    content_view_published: False
    remove_content_view_version_ids: []

- name: "Obtain content view ID"
  block:
    - name: "Obtain content views"
      include_tasks: "get_content_views.yml"

    - name: "Set content view facts"
      set_fact:
        content_view_id: "{{ cv_qry.json.results[0].id }}"
        content_view_composite: "{{ cv_qry.json.results[0].composite | bool }}"
      when: 'cv.name == cv_qry.json.results[0].name'

    - debug:
        var: "content_view_id"
        verbosity: "1"

    - debug:
        var: "content_view_composite"
        verbosity: "1"

# TODO:
# - name: "Create content view"
#   block:
#
#   when:
#     - 'content_view_id == ""'
#     - 'cv.create_on_missing | default(False)'

- name: "Publish new content view version"
  include_tasks: "publish_content_view.yml"
  when:
    - "cv.publish_new_version | default(False)"
    - "not content_view_composite"
    - "content_view_id != ''"

- name: "Promote content view to lifecycle environments"
  include_tasks: "promote_content_view.yml"
  when:
    - "cv.promote_to | default([]) | length > 0"

- name: "Remove previous content view version"
  include_tasks: "remove_prev_cv_ver.yml"
  when:
    - "cv.promote_remove_previous_version | default(False)"
    - "cv.promote_to | default([]) | length > 0" #only delete when we promote
    - "cv_vers | default([]) | length > 1" #make sure we have more than 1 version
    - "content_view_published"
  vars:
    cv_id_jq: "versions[*].id"
    cv_vers: "{{ cv_qry.json.results[0] | json_query(cv_id_jq) }}"

- debug:
    msg:
      - "Not attempting to remove previous content view version for one of the following reasons:"
      - "    A content view was not published during this run"
      - "    There was less than 2 content view versions, so we do not want to try and delete the only one we have."
  when: (not content_view_published and
          cv.promote_remove_previous_version | default(False)) or
        (cv_vers | length < 2 and
          cv.promote_remove_previous_version | default(False))
  vars:
    cv_id_jq: "versions[*].id"
    cv_vers: "{{ cv_qry.json.results[0] | json_query(cv_id_jq) }}"

- name: "Remove specified content view version(s)"
  block:
    - name: "Set content view version ID"
      include_tasks: "build_cv_remove_list.yml"
      with_items: "{{ cv.remove_content_view_versions }}"
      loop_control:
        loop_var: "version"

    - name: "Remove content view versions"
      include_tasks: "remove_cv_vers.yml"
      with_items: "{{ remove_content_view_version_ids }}"
      loop_control:
        loop_var: "version"
        label: "{{ version.name }}"
  when: "cv.remove_content_view_versions | default([]) | length > 0"
